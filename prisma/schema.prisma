// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @unique @default(autoincrement())
  username String @unique
  password String
  role     Role   @default(Admin)
}

enum Role {
  Admin
  Cashier
  Kitchen
}

model Cashier {
  id         Int               @id @default(autoincrement())
  username   String            @unique
  password   String
  role       Role              @default(Cashier)
  categories CategoryCashier[]
}

model Category {
  id          Int               @id @default(autoincrement())
  name        String
  description String
  products    Product[]
  cashier     CategoryCashier[]
}

model CategoryCashier {
  id         Int      @id @default(autoincrement())
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  cashier    Cashier  @relation(fields: [cashierId], references: [id])
  cashierId  Int
}

model Product {
  id         Int               @id @default(autoincrement())
  name       String
  price      Float
  stock      Int?
  type       Type
  categoryId Int
  category   Category          @relation(fields: [categoryId], references: [id])
  sale       ProductSale[]
  courtesy   ProductCourtesy[]
}

model Sale {
  id       Int           @id @default(autoincrement())
  date     DateTime      @default(now()) @db.Date
  total    Float
  method   Method        @default(Cash)
  products ProductSale[]
}

enum Method {
  Cash
  Transfer
}

enum Type {
  Withstock
  Nostock
}

model ProductSale {
  id        Int     @id @default(autoincrement())
  saleId    Int
  sale      Sale    @relation(fields: [saleId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  subtotal  Float
}

model Client {
  id        Int        @id @default(autoincrement())
  name      String
  courtesty Courtesy[]
}

model Courtesy {
  id       Int               @id @default(autoincrement())
  date     DateTime          @default(now()) @db.Date
  total    Float
  products ProductCourtesy[]
  client   Client            @relation(fields: [clientId], references: [id])
  clientId Int
}

model ProductCourtesy {
  id         Int      @id @default(autoincrement())
  courtesyId Int
  courtesy   Courtesy @relation(fields: [courtesyId], references: [id])
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  subtotal   Float
}

model Payment {
  id    Int      @id @default(autoincrement())
  date  DateTime @default(now()) @db.Date
  total Float
}

model Expense {
  id          Int      @id @default(autoincrement())
  description String
  date        DateTime @default(now()) @db.Date
  total       Float
}
